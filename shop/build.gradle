buildscript {
    ext {
        springBootVersion = '2.1.1.RELEASE'
    }
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}

plugins {
    id 'com.github.sherter.google-java-format' version '0.8'
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'com.github.sherter.google-java-format'

group = 'com.example'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = 1.8

repositories {
    mavenCentral()
}

dependencies {
    implementation('org.springframework.security.oauth.boot:spring-security-oauth2-autoconfigure:' + springBootVersion)
    implementation('org.springframework.boot:spring-boot-starter-security')
    implementation('org.springframework.boot:spring-boot-starter-data-jpa')
    implementation('org.springframework.boot:spring-boot-starter-web')
    implementation('org.springframework.boot:spring-boot-starter')

    implementation('org.yaml:snakeyaml')
    implementation('com.google.code.gson:gson')

    runtimeOnly('org.hsqldb:hsqldb')
//    runtimeOnly('com.h2database:h2')
//    runtimeOnly('mysql:mysql-connector-java')
    runtimeOnly('org.mariadb.jdbc:mariadb-java-client')
    runtimeOnly('org.springframework.boot:spring-boot-devtools')

    annotationProcessor('org.springframework.boot:spring-boot-configuration-processor')
    annotationProcessor('org.projectlombok:lombok')

    compileOnly('org.springframework.boot:spring-boot-configuration-processor')
    compileOnly('org.projectlombok:lombok')

    testImplementation('org.springframework.boot:spring-boot-starter-test')
}


gradle.projectsEvaluated {
    tasks.withType(JavaCompile) {
        options.compilerArgs << "-Xlint:unchecked" << "-Xlint:deprecation"
    }
}

googleJavaFormat {
    options style: 'AOSP'
}

compileJava.dependsOn tasks.googleJavaFormat
